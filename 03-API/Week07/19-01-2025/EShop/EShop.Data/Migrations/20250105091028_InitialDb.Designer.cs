// <auto-generated />
using System;
using EShop.Data.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShop.Data.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    [Migration("20250105091028_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EShop.Entity.Concrete.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0517f36e-53b1-4a0d-b6b3-599afdd926cf",
                            Description = "Yönetici rolü",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c44cd475-5365-409f-845c-6ea238190b2b",
                            Description = "Normal kullanıcı rolü",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d4757375-a497-496b-85dc-a510027bd9b1",
                            AccessFailedCount = 0,
                            Address = "Ataşehir",
                            City = "İstanbul",
                            ConcurrencyStamp = "667bd2b9-5f0f-4daf-b86a-f28e31b0b51b",
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adminuser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 3,
                            LastName = "Cabbar",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINUSER@GMAIL.COM",
                            NormalizedUserName = "ADMINUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEPYE1bLFX3VSoDxQP9C2m6DuGFajEzTSdiixNLIx2v6jRxECxN1EpSIs2+2xkA+XXQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "900ce216-0c87-4939-a481-8543ef9a0e40",
                            TwoFactorEnabled = false,
                            UserName = "adminuser@gmail.com"
                        },
                        new
                        {
                            Id = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            AccessFailedCount = 0,
                            Address = "Kadıköy",
                            City = "İstanbul",
                            ConcurrencyStamp = "a3773d10-276d-4931-ac8d-c9b44ca901ba",
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "normaluser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Esin",
                            Gender = 2,
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORMALUSER@GMAIL.COM",
                            NormalizedUserName = "NORMALUSER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFulJPm+BAKd/JRaX29M4l3loZKTZDFVzIqUuLdmQOeIjcwVCKxJJ7ydYdntIzfiIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5f80f344-7f50-4628-a352-578eba552a3b",
                            TwoFactorEnabled = false,
                            UserName = "normaluser@gmail.com"
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 28, 100, DateTimeKind.Utc).AddTicks(4634),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 28, 100, DateTimeKind.Utc).AddTicks(4637),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4911),
                            Description = "Bilgisayarlar, telefonlar ve diğer elektronik ürünler.",
                            ImageUrl = "/images/categories/elektronik.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Elektronik",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4915),
                            Description = "Kadın, erkek ve çocuk giyim ürünleri.",
                            ImageUrl = "/images/categories/moda.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Moda",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4916),
                            Description = "Ev dekorasyonu ve yaşam alanları için ürünler.",
                            ImageUrl = "/images/categories/ev-ve-yasam.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ev & Yaşam",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4917),
                            Description = "Outdoor ve spor yaparken kullanabileceğiniz ekipmanlar.",
                            ImageUrl = "/images/categories/spor-outdoor.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Spor & Outdoor",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4919),
                            Description = "Araba aksesuarları ve yedek parçalar.",
                            ImageUrl = "/images/categories/otomotiv.jpg",
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Otomotiv",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4920),
                            Description = "Farklı kategorilerde kitaplar.",
                            ImageUrl = "/images/categories/kitaplar.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kitaplar",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4921),
                            Description = "Sağlık ve güzellik ürünleri.",
                            ImageUrl = "/images/categories/saglik-kozmetik.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sağlık & Kozmetik",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4923),
                            Description = "Yiyecek ve içecek ürünleri.",
                            ImageUrl = "/images/categories/gida.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gıda",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4924),
                            Description = "Hobi, oyun ve eğlence ürünleri.",
                            ImageUrl = "/images/categories/hobi-eglence.jpg",
                            IsActive = false,
                            IsDeleted = false,
                            Name = "Hobi & Eğlence",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(4926),
                            Description = "Buzdolapları, çamaşır makineleri ve diğer büyük ev aletleri.",
                            ImageUrl = "/images/categories/beyaz-esya.jpg",
                            IsActive = true,
                            IsDeleted = true,
                            Name = "Beyaz Eşya",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5510),
                            ImageUrl = "/images/products/laptop.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 1500.00m,
                            Properties = "16GB RAM, 512GB SSD",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5515),
                            ImageUrl = "/images/products/smartphone.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Smartphone",
                            Price = 800.00m,
                            Properties = "128GB Storage, 6GB RAM",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5516),
                            ImageUrl = "/images/products/tshirt.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "T-Shirt",
                            Price = 20.00m,
                            Properties = "100% Cotton, Size M",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5518),
                            ImageUrl = "/images/products/running_shoes.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Running Shoes",
                            Price = 60.00m,
                            Properties = "Size 42, Black",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5519),
                            ImageUrl = "/images/products/refrigerator.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Refrigerator",
                            Price = 500.00m,
                            Properties = "300L, Energy Class A++",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5520),
                            ImageUrl = "/images/products/novel_book.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Novel Book",
                            Price = 15.00m,
                            Properties = "Fiction, 300 pages",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5522),
                            ImageUrl = "/images/products/face_cream.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Face Cream",
                            Price = 25.00m,
                            Properties = "50ml, Anti-aging",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5523),
                            ImageUrl = "/images/products/organic_apple.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Organic Apple",
                            Price = 3.00m,
                            Properties = "1kg, Fresh",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5525),
                            ImageUrl = "/images/products/guitar.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Guitar",
                            Price = 120.00m,
                            Properties = "Acoustic, 6 strings",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5526),
                            ImageUrl = "/images/products/car_tire.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Car Tire",
                            Price = 70.00m,
                            Properties = "195/65 R15",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5527),
                            ImageUrl = "/images/products/smartwatch.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Smartwatch",
                            Price = 200.00m,
                            Properties = "Heart Rate Monitor, GPS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5529),
                            ImageUrl = "/images/products/tablet.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tablet",
                            Price = 300.00m,
                            Properties = "10.1 inch, 64GB",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5530),
                            ImageUrl = "/images/products/headphones.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Headphones",
                            Price = 150.00m,
                            Properties = "Noise Cancelling",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5531),
                            ImageUrl = "/images/products/blender.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Blender",
                            Price = 50.00m,
                            Properties = "500W, 1.5L",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5532),
                            ImageUrl = "/images/products/microwave.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Microwave",
                            Price = 100.00m,
                            Properties = "800W, 20L",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5542),
                            ImageUrl = "/images/products/camera.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Camera",
                            Price = 700.00m,
                            Properties = "24MP, 4K Video",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5544),
                            ImageUrl = "/images/products/watch.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Watch",
                            Price = 80.00m,
                            Properties = "Analog, Water Resistant",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5545),
                            ImageUrl = "/images/products/backpack.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Backpack",
                            Price = 40.00m,
                            Properties = "30L, Waterproof",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5547),
                            ImageUrl = "/images/products/desk_lamp.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Desk Lamp",
                            Price = 25.00m,
                            Properties = "LED, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5548),
                            ImageUrl = "/images/products/electric_kettle.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Kettle",
                            Price = 30.00m,
                            Properties = "1.7L, 2200W",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5549),
                            ImageUrl = "/images/products/gaming_chair.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gaming Chair",
                            Price = 200.00m,
                            Properties = "Ergonomic, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5550),
                            ImageUrl = "/images/products/sunglasses.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sunglasses",
                            Price = 50.00m,
                            Properties = "UV Protection",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5552),
                            ImageUrl = "/images/products/sneakers.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sneakers",
                            Price = 70.00m,
                            Properties = "Size 43, White",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5553),
                            ImageUrl = "/images/products/coffee_maker.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Coffee Maker",
                            Price = 80.00m,
                            Properties = "12 Cups, Programmable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5554),
                            ImageUrl = "/images/products/vacuum_cleaner.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Vacuum Cleaner",
                            Price = 150.00m,
                            Properties = "Bagless, 2000W",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5556),
                            ImageUrl = "/images/products/air_conditioner.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Air Conditioner",
                            Price = 600.00m,
                            Properties = "12000 BTU, Inverter",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5557),
                            ImageUrl = "/images/products/electric_toothbrush.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Toothbrush",
                            Price = 40.00m,
                            Properties = "Rechargeable, 3 Modes",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5558),
                            ImageUrl = "/images/products/hair_dryer.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hair Dryer",
                            Price = 30.00m,
                            Properties = "2000W, Ionic",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5560),
                            ImageUrl = "/images/products/smart_tv.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Smart TV",
                            Price = 700.00m,
                            Properties = "55 inch, 4K UHD",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5561),
                            ImageUrl = "/images/products/gaming_console.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gaming Console",
                            Price = 500.00m,
                            Properties = "1TB, 4K HDR",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5562),
                            ImageUrl = "/images/products/wireless_mouse.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wireless Mouse",
                            Price = 25.00m,
                            Properties = "Ergonomic, 1600 DPI",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5565),
                            ImageUrl = "/images/products/keyboard.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Keyboard",
                            Price = 80.00m,
                            Properties = "Mechanical, RGB",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5566),
                            ImageUrl = "/images/products/monitor.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Monitor",
                            Price = 300.00m,
                            Properties = "27 inch, 144Hz",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5567),
                            ImageUrl = "/images/products/printer.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Printer",
                            Price = 150.00m,
                            Properties = "All-in-One, Wireless",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5569),
                            ImageUrl = "/images/products/router.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Router",
                            Price = 100.00m,
                            Properties = "Dual Band, Gigabit",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5570),
                            ImageUrl = "/images/products/external_hard_drive.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "External Hard Drive",
                            Price = 80.00m,
                            Properties = "2TB, USB 3.0",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5571),
                            ImageUrl = "/images/products/flash_drive.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Flash Drive",
                            Price = 20.00m,
                            Properties = "64GB, USB 3.0",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5573),
                            ImageUrl = "/images/products/power_bank.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Power Bank",
                            Price = 30.00m,
                            Properties = "10000mAh, Fast Charging",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5574),
                            ImageUrl = "/images/products/wireless_charger.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wireless Charger",
                            Price = 25.00m,
                            Properties = "10W, Fast Charging",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5576),
                            ImageUrl = "/images/products/smart_light_bulb.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Smart Light Bulb",
                            Price = 20.00m,
                            Properties = "RGB, WiFi",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 41,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5577),
                            ImageUrl = "/images/products/security_camera.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Security Camera",
                            Price = 60.00m,
                            Properties = "1080p, Night Vision",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 42,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5578),
                            ImageUrl = "/images/products/fitness_tracker.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Fitness Tracker",
                            Price = 50.00m,
                            Properties = "Heart Rate Monitor, GPS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 43,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5579),
                            ImageUrl = "/images/products/electric_scooter.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Scooter",
                            Price = 400.00m,
                            Properties = "25km/h, 30km Range",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 44,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5580),
                            ImageUrl = "/images/products/drone.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Drone",
                            Price = 500.00m,
                            Properties = "4K Camera, GPS",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 45,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5581),
                            ImageUrl = "/images/products/action_camera.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Action Camera",
                            Price = 150.00m,
                            Properties = "4K, Waterproof",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 46,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5583),
                            ImageUrl = "/images/products/electric_shaver.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Shaver",
                            Price = 60.00m,
                            Properties = "Rechargeable, Wet & Dry",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 47,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5584),
                            ImageUrl = "/images/products/hair_straightener.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hair Straightener",
                            Price = 40.00m,
                            Properties = "Ceramic, 200°C",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 48,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5585),
                            ImageUrl = "/images/products/electric_grill.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Grill",
                            Price = 70.00m,
                            Properties = "2000W, Non-Stick",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 49,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5587),
                            ImageUrl = "/images/products/rice_cooker.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rice Cooker",
                            Price = 50.00m,
                            Properties = "1.8L, Non-Stick",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 50,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5589),
                            ImageUrl = "/images/products/air_fryer.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Air Fryer",
                            Price = 100.00m,
                            Properties = "3.5L, Digital",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 51,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5590),
                            ImageUrl = "/images/products/electric_blanket.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Blanket",
                            Price = 40.00m,
                            Properties = "150x200cm, 3 Heat Settings",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 52,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5591),
                            ImageUrl = "/images/products/water_filter.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Water Filter",
                            Price = 30.00m,
                            Properties = "10L, 5-Stage",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 53,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5593),
                            ImageUrl = "/images/products/electric_heater.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Heater",
                            Price = 50.00m,
                            Properties = "2000W, Adjustable Thermostat",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 54,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5594),
                            ImageUrl = "/images/products/dehumidifier.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dehumidifier",
                            Price = 150.00m,
                            Properties = "20L, Digital",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 55,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5595),
                            ImageUrl = "/images/products/humidifier.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Humidifier",
                            Price = 40.00m,
                            Properties = "5L, Ultrasonic",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 56,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5597),
                            ImageUrl = "/images/products/electric_fan.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Fan",
                            Price = 30.00m,
                            Properties = "16 inch, Oscillating",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 57,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5598),
                            ImageUrl = "/images/products/electric_iron.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Iron",
                            Price = 40.00m,
                            Properties = "2400W, Steam",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 58,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5599),
                            ImageUrl = "/images/products/sewing_machine.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sewing Machine",
                            Price = 100.00m,
                            Properties = "Portable, 12 Stitches",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 59,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5601),
                            ImageUrl = "/images/products/electric_screwdriver.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Electric Screwdriver",
                            Price = 30.00m,
                            Properties = "Rechargeable, 3.6V",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 60,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5602),
                            ImageUrl = "/images/products/cordless_drill.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Cordless Drill",
                            Price = 80.00m,
                            Properties = "18V, 2 Batteries",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 61,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5603),
                            ImageUrl = "/images/products/tool_set.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tool Set",
                            Price = 50.00m,
                            Properties = "100 Pieces, Chrome Vanadium",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 62,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5604),
                            ImageUrl = "/images/products/lawn_mower.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Lawn Mower",
                            Price = 150.00m,
                            Properties = "Electric, 1600W",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 63,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5606),
                            ImageUrl = "/images/products/garden_hose.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Garden Hose",
                            Price = 40.00m,
                            Properties = "30m, Expandable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 64,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5607),
                            ImageUrl = "/images/products/bbq_grill.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "BBQ Grill",
                            Price = 70.00m,
                            Properties = "Charcoal, Portable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 65,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5609),
                            ImageUrl = "/images/products/tent.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tent",
                            Price = 100.00m,
                            Properties = "4 Person, Waterproof",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 66,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5610),
                            ImageUrl = "/images/products/sleeping_bag.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sleeping Bag",
                            Price = 50.00m,
                            Properties = "3 Season, Mummy",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 67,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5612),
                            ImageUrl = "/images/products/camping_stove.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Camping Stove",
                            Price = 30.00m,
                            Properties = "Portable, Gas",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 68,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5613),
                            ImageUrl = "/images/products/hiking_backpack.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hiking Backpack",
                            Price = 60.00m,
                            Properties = "50L, Waterproof",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 69,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5614),
                            ImageUrl = "/images/products/binoculars.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Binoculars",
                            Price = 80.00m,
                            Properties = "10x50, Waterproof",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 70,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5621),
                            ImageUrl = "/images/products/fishing_rod.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Fishing Rod",
                            Price = 40.00m,
                            Properties = "Carbon Fiber, 2.1m",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 71,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5623),
                            ImageUrl = "/images/products/yoga_mat.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Yoga Mat",
                            Price = 20.00m,
                            Properties = "6mm, Non-Slip",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 72,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5624),
                            ImageUrl = "/images/products/dumbbell_set.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Dumbbell Set",
                            Price = 50.00m,
                            Properties = "20kg, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 73,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5625),
                            ImageUrl = "/images/products/treadmill.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Treadmill",
                            Price = 500.00m,
                            Properties = "Folding, 2.5HP",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 74,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5626),
                            ImageUrl = "/images/products/exercise_bike.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Exercise Bike",
                            Price = 200.00m,
                            Properties = "Magnetic, 8 Resistance Levels",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 75,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5627),
                            ImageUrl = "/images/products/rowing_machine.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rowing Machine",
                            Price = 300.00m,
                            Properties = "Magnetic, Foldable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 76,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5629),
                            ImageUrl = "/images/products/elliptical_trainer.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Elliptical Trainer",
                            Price = 400.00m,
                            Properties = "Magnetic, 8 Resistance Levels",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 77,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5630),
                            ImageUrl = "/images/products/weight_bench.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Weight Bench",
                            Price = 100.00m,
                            Properties = "Adjustable, Foldable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 78,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5631),
                            ImageUrl = "/images/products/pull_up_bar.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pull-Up Bar",
                            Price = 30.00m,
                            Properties = "Doorway, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 79,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5633),
                            ImageUrl = "/images/products/resistance_bands.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Resistance Bands",
                            Price = 20.00m,
                            Properties = "Set of 5, Different Resistance Levels",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 80,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5634),
                            ImageUrl = "/images/products/jump_rope.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Jump Rope",
                            Price = 10.00m,
                            Properties = "Adjustable, Speed",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 81,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5636),
                            ImageUrl = "/images/products/basketball.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Basketball",
                            Price = 25.00m,
                            Properties = "Size 7, Indoor/Outdoor",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 82,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5637),
                            ImageUrl = "/images/products/soccer_ball.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Soccer Ball",
                            Price = 20.00m,
                            Properties = "Size 5, Synthetic Leather",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 83,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5639),
                            ImageUrl = "/images/products/tennis_racket.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tennis Racket",
                            Price = 50.00m,
                            Properties = "Graphite, Lightweight",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 84,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5640),
                            ImageUrl = "/images/products/badminton_set.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Badminton Set",
                            Price = 30.00m,
                            Properties = "2 Rackets, 3 Shuttlecocks",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 85,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5641),
                            ImageUrl = "/images/products/golf_clubs.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Golf Clubs",
                            Price = 500.00m,
                            Properties = "Set of 12, Graphite",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 86,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5644),
                            ImageUrl = "/images/products/skateboard.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Skateboard",
                            Price = 40.00m,
                            Properties = "31 inch, Maple",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 87,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5645),
                            ImageUrl = "/images/products/roller_skates.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Roller Skates",
                            Price = 60.00m,
                            Properties = "Adjustable, Size 38-42",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 88,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5647),
                            ImageUrl = "/images/products/helmet.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Helmet",
                            Price = 30.00m,
                            Properties = "Bike, Size M",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 89,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5648),
                            ImageUrl = "/images/products/knee_pads.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Knee Pads",
                            Price = 20.00m,
                            Properties = "Set of 2, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 90,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5649),
                            ImageUrl = "/images/products/elbow_pads.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Elbow Pads",
                            Price = 20.00m,
                            Properties = "Set of 2, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 91,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5650),
                            ImageUrl = "/images/products/wrist_guards.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wrist Guards",
                            Price = 20.00m,
                            Properties = "Set of 2, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 92,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5652),
                            ImageUrl = "/images/products/bike_lock.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Lock",
                            Price = 25.00m,
                            Properties = "Combination, Heavy Duty",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 93,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5653),
                            ImageUrl = "/images/products/bike_pump.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Pump",
                            Price = 20.00m,
                            Properties = "Portable, High Pressure",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 94,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5654),
                            ImageUrl = "/images/products/bike_light.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Light",
                            Price = 30.00m,
                            Properties = "Front and Rear, USB Rechargeable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 95,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5655),
                            ImageUrl = "/images/products/bike_bell.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Bell",
                            Price = 10.00m,
                            Properties = "Loud, Easy to Install",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 96,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5657),
                            ImageUrl = "/images/products/bike_basket.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Basket",
                            Price = 40.00m,
                            Properties = "Front, Wicker",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 97,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5659),
                            ImageUrl = "/images/products/bike_rack.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Rack",
                            Price = 50.00m,
                            Properties = "Rear, Adjustable",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 98,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5660),
                            ImageUrl = "/images/products/bike_seat.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Seat",
                            Price = 30.00m,
                            Properties = "Comfort, Gel",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 99,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5661),
                            ImageUrl = "/images/products/bike_gloves.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Gloves",
                            Price = 20.00m,
                            Properties = "Padded, Size L",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 100,
                            CreateDate = new DateTime(2025, 1, 5, 9, 10, 27, 953, DateTimeKind.Utc).AddTicks(5663),
                            ImageUrl = "/images/products/bike_shorts.jpg",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bike Shorts",
                            Price = 40.00m,
                            Properties = "Padded, Size M",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 49,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 50,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 51,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 52,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 53,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 54,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 55,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 56,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 57,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 58,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 59,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 60,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 61,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 62,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 63,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 64,
                            CategoryId = 10
                        },
                        new
                        {
                            ProductId = 65,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 66,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 67,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 68,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 69,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 70,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 71,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 72,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 73,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 74,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 75,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 76,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 77,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 78,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 79,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 80,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 81,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 82,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 83,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 84,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 85,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 86,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 87,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 88,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 89,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 90,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 91,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 92,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 93,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 94,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 95,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 96,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 97,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 98,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 99,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 100,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            RoleId = "0517f36e-53b1-4a0d-b6b3-599afdd926cf"
                        },
                        new
                        {
                            UserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            RoleId = "c44cd475-5365-409f-845c-6ea238190b2b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.CartItem", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.OrderItem", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ProductCategory", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
