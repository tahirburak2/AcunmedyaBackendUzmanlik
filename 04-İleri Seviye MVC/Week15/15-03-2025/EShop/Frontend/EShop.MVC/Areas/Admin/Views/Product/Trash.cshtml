@model List<ProductModel>
@{
    ViewData["Title"] = "Çöp Kutusu";
}

@Html.AntiForgeryToken()

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Çöp Kutusu</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="javascript: void(0);">Ürünler</a></li>
                        <li class="breadcrumb-item active">Çöp Kutusu</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <table id="entity-table" class="table table-striped table-bordered dt-responsive nowrap"
                        style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                        <thead>
                            <tr>
                                <th>Resim</th>
                                <th>Ad</th>
                                <th>Fiyat</th>
                                <th>Özellikler</th>
                                <th>Silinme Tarihi</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model)
                            {
                                <tr>
                                    <td><img src="@Url.ApiContent(product.ImageUrl)" alt="@product.Name"
                                            class="img-thumbnail" width="50" />
                                    </td>
                                    <td>@product.Name</td>
                                    <td>@product.Price.ToString("C2")</td>
                                    <td>@product.Properties</td>
                                    <td>@product.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        <button class="btn btn-success btn-sm" onclick="restoreProduct(@product.Id)">
                                            <i class="fas fa-trash-restore"></i> Geri Al
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="hardDeleteProduct(@product.Id)">
                                            <i class="fas fa-trash"></i> Kalıcı Sil
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section StylesSection {
    <!-- DataTables -->
    <link rel="stylesheet" href="~/admin/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/admin/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/admin/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <!-- SweetAlert2 -->
    <link rel="stylesheet" href="~/admin/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">
}

@section ScriptsSection {
    <!-- DataTables  & Plugins -->
    <script src="~/admin/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/admin/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/admin/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/admin/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="~/admin/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script>
        $(document).ready(function () {
            // DataTable initialization
            $("#entity-table").DataTable({
                "responsive": true,
                "lengthChange": true,
                "autoWidth": false,
                "language": {
                    "url": "/admin/plugins/datatables/tr.json"
                }
            });
        });

        function restoreProduct(id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu ürünü geri almak istediğinize emin misiniz?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, geri al!',
                cancelButtonText: 'İptal'
            }).then((result) => {

                if (result.isConfirmed) {
                    console.log($('input[name="__RequestVerificationToken"]').val())
                    $.ajax({
                        url: '/Admin/Product/SoftDelete/' + id,
                        type: 'PUT',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.isSuccessful) {
                                Swal.fire({
                                    title: "İşlem Başarılı!",
                                    text: 'Ürün geri alındı',
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: "İşlem Başarısız Oldu!",
                                    text: response.error || "Ürün geri alınmaya çalışılırken bir sorun oluştu!",
                                    icon: "error",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        },
                        error: function (err) {
                            console.log(err);
                            Swal.fire({
                                title: "İşlem Başarısız Oldu!",
                                text: response.error || "Ürün geri alınmaya çalışılırken bir sorun oluştu!",
                                icon: "error",
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    });
                }
            });
        }

        function hardDeleteProduct(id) {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Bu ürün kalıcı olarak silinecek. Bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Product/HardDelete/' + id,
                        type: 'DELETE',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.isSuccessful) {
                                Swal.fire({
                                    title: "İşlem Başarısız Oldu!",
                                    text: 'Ürün silindi',
                                    icon: "success",
                                    showConfirmButton: false,
                                    timer: 1500
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: "İşlem Başarısız Oldu!",
                                    text: response.error || "Ürün silinmeye çalışılırken bir sorun oluştu!",
                                    icon: "error",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: "İşlem Başarısız Oldu!",
                                text: response.error || "Ürün silinmeye çalışılırken bir sorun oluştu!",
                                icon: "error",
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    });
                }
            });
        }
    </script>
}