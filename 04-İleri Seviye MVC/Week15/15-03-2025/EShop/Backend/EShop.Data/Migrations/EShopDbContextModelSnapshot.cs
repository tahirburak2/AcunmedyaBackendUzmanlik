// <auto-generated />
using System;
using EShop.Data.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShop.Data.Migrations
{
    [DbContext(typeof(EShopDbContext))]
    partial class EShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EShop.Entity.Concrete.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0517f36e-53b1-4a0d-b6b3-599afdd926cf",
                            Description = "Yönetici rolü",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c44cd475-5365-409f-845c-6ea238190b2b",
                            Description = "Normal kullanıcı rolü",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d4757375-a497-496b-85dc-a510027bd9b1",
                            AccessFailedCount = 0,
                            Address = "Ataşehir",
                            City = "İstanbul",
                            ConcurrencyStamp = "aa7a806c-44d3-4962-a419-d3ca59c21baa",
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "testadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ali",
                            Gender = 3,
                            LastName = "Cabbar",
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTADMIN@GMAIL.COM",
                            NormalizedUserName = "TESTADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEK3fFeOwQZomROL8PWklI64BPLSs9VX8BPLgK9FZ6MlTufdfryhlorrSsctxHuOY4g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b4f90223-e7c2-4d5e-9fd8-fff76d17fc03",
                            TwoFactorEnabled = false,
                            UserName = "testadmin"
                        },
                        new
                        {
                            Id = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            AccessFailedCount = 0,
                            Address = "Kadıköy",
                            City = "İstanbul",
                            ConcurrencyStamp = "5af22739-42bc-429e-8a65-d2420a30d897",
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "testuser@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Esin",
                            Gender = 2,
                            LastName = "Çelik",
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTUSER@GMAIL.COM",
                            NormalizedUserName = "TESTUSER",
                            PasswordHash = "AQAAAAIAAYagAAAAECQeJvv9Ok0Ns+SrukutHquDPV9Tm553ucGlajBCASlg3JL7YFz1j3Y50apDgXBEZA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b55e118c-8f12-4258-b8a8-80960d4fa5f5",
                            TwoFactorEnabled = false,
                            UserName = "testuser"
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(2241), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(2244), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMenuItem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9538), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9542), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bilgisayarlar, akıllı telefonlar, tabletler, televizyonlar ve diğer tüm elektronik cihazlar bu kategoride bulunabilir. Teknoloji tutkunları için en yeni ve popüler ürünler burada!",
                            ImageUrl = "/images/categories/elektronik.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = true,
                            Name = "Elektronik",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9542), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9544), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9545), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Kadın, erkek ve çocuk giyim ürünleri, ayakkabılar, çantalar ve aksesuarlar bu kategoride. Trendleri yakalayın ve tarzınızı yansıtın!",
                            ImageUrl = "/images/categories/moda.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = true,
                            Name = "Moda",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9545), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9547), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9550), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Ev dekorasyonu, mobilyalar, mutfak gereçleri, bahçe ürünleri ve daha fazlası bu kategoride. Evinizi güzelleştirmek için ihtiyacınız olan her şey burada!",
                            ImageUrl = "/images/categories/ev-yasam.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = true,
                            Name = "Ev & Yaşam",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9549), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9551), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9552), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Spor ekipmanları, outdoor giyim, kamp malzemeleri, bisikletler ve fitness ürünleri bu kategoride. Aktif bir yaşam için ihtiyacınız olan her şey burada!",
                            ImageUrl = "/images/categories/spor-outdoor.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = true,
                            Name = "Spor & Outdoor",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9552), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9553), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9555), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Romanlar, kişisel gelişim kitapları, akademik yayınlar, dergiler ve daha fazlası bu kategoride. Okuma tutkunları için geniş bir seçki!",
                            ImageUrl = "/images/categories/kitap-dergi.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = true,
                            Name = "Kitap & Dergi",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9554), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9556), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9557), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Çocuk oyuncakları, yapbozlar, model kitler, hobi malzemeleri ve koleksiyon ürünleri bu kategoride. Hem çocuklar hem de yetişkinler için eğlenceli seçenekler!",
                            ImageUrl = "/images/categories/oyuncak-hobi.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = false,
                            Name = "Oyuncak & Hobi",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9557), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9558), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9560), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Cilt bakım ürünleri, makyaj malzemeleri, parfümler, saç bakım ürünleri ve daha fazlası bu kategoride. Kendinizi şımartın ve bakım rutininizi oluşturun!",
                            ImageUrl = "/images/categories/kozmetik-bakim.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = false,
                            Name = "Kozmetik & Kişisel Bakım",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9559), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9561), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9563), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Valizler, sırt çantaları, seyahat aksesuarları ve seyahat planlaması için gerekli ürünler bu kategoride. Yeni yerler keşfetmeye hazır olun!",
                            ImageUrl = "/images/categories/seyahat-valiz.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsMenuItem = false,
                            Name = "Seyahat & Valiz",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9563), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9565), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9566), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Bebek giysileri, bebek bakım ürünleri, oyuncaklar, çocuk odası dekorasyonu ve daha fazlası bu kategoride. Bebekler ve çocuklar için en kaliteli ürünler!",
                            ImageUrl = "/images/categories/bebek-cocuk.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsMenuItem = false,
                            Name = "Bebek & Çocuk",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9566), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9567), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9568), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Araç bakım ürünleri, yedek parçalar, araç içi aksesuarlar ve otomotiv ekipmanları bu kategoride. Araç tutkunları için ihtiyaç duyulan her şey!",
                            ImageUrl = "/images/categories/otomotiv.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsMenuItem = false,
                            Name = "Otomotiv",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 897, DateTimeKind.Unspecified).AddTicks(9568), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address 1",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            Address = "Address 2",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            Address = "Address 3",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            Address = "Address 4",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 5",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            Address = "Address 5",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            Address = "Address 6",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            Address = "Address 7",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            Address = "Address 8",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            Address = "Address 9",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 5",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            Address = "Address 10",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 3,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            Address = "Address 11",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            Address = "Address 12",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            Address = "Address 13",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            Address = "Address 14",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 5",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 1,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            Address = "Address 15",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            Address = "Address 16",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            Address = "Address 17",
                            ApplicationUserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            City = "City 3",
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            Address = "Address 18",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 4",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 0,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            Address = "Address 19",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 5",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            Address = "Address 20",
                            ApplicationUserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            City = "City 1",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderStatus = 2,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3457), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 1,
                            ProductId = 28,
                            Quantity = 5,
                            UnitPrice = 420m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3460), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 1,
                            ProductId = 34,
                            Quantity = 3,
                            UnitPrice = 12m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3461), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 5,
                            UnitPrice = 186m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3462), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 1,
                            ProductId = 23,
                            Quantity = 3,
                            UnitPrice = 189m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3463), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 1,
                            ProductId = 25,
                            Quantity = 1,
                            UnitPrice = 305m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3472), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 2,
                            ProductId = 8,
                            Quantity = 2,
                            UnitPrice = 279m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3473), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 2,
                            ProductId = 14,
                            Quantity = 1,
                            UnitPrice = 140m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3474), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 2,
                            ProductId = 40,
                            Quantity = 2,
                            UnitPrice = 335m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3480), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 3,
                            ProductId = 4,
                            Quantity = 2,
                            UnitPrice = 273m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3482), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 3,
                            ProductId = 38,
                            Quantity = 4,
                            UnitPrice = 137m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3483), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 3,
                            ProductId = 29,
                            Quantity = 5,
                            UnitPrice = 440m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3487), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 4,
                            ProductId = 24,
                            Quantity = 4,
                            UnitPrice = 307m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3508), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 5,
                            ProductId = 7,
                            Quantity = 2,
                            UnitPrice = 371m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3509), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 5,
                            ProductId = 29,
                            Quantity = 2,
                            UnitPrice = 141m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3518), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 6,
                            ProductId = 33,
                            Quantity = 3,
                            UnitPrice = 301m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3519), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 6,
                            ProductId = 7,
                            Quantity = 5,
                            UnitPrice = 178m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3520), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 6,
                            ProductId = 1,
                            Quantity = 2,
                            UnitPrice = 238m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3522), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 6,
                            ProductId = 22,
                            Quantity = 4,
                            UnitPrice = 454m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3523), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 6,
                            ProductId = 23,
                            Quantity = 5,
                            UnitPrice = 205m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3530), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 7,
                            ProductId = 32,
                            Quantity = 3,
                            UnitPrice = 418m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3545), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 7,
                            ProductId = 1,
                            Quantity = 2,
                            UnitPrice = 143m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3546), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 7,
                            ProductId = 1,
                            Quantity = 5,
                            UnitPrice = 245m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3551), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 8,
                            ProductId = 21,
                            Quantity = 3,
                            UnitPrice = 298m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3552), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 8,
                            ProductId = 17,
                            Quantity = 3,
                            UnitPrice = 165m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3552), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 8,
                            ProductId = 39,
                            Quantity = 1,
                            UnitPrice = 194m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3553), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 8,
                            ProductId = 30,
                            Quantity = 2,
                            UnitPrice = 47m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3558), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 9,
                            ProductId = 16,
                            Quantity = 5,
                            UnitPrice = 262m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3559), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 9,
                            ProductId = 11,
                            Quantity = 4,
                            UnitPrice = 59m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3560), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 9,
                            ProductId = 12,
                            Quantity = 5,
                            UnitPrice = 409m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3580), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 10,
                            ProductId = 40,
                            Quantity = 5,
                            UnitPrice = 441m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3581), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 10,
                            ProductId = 24,
                            Quantity = 1,
                            UnitPrice = 25m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3582), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 10,
                            ProductId = 30,
                            Quantity = 5,
                            UnitPrice = 248m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3587), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 11,
                            ProductId = 11,
                            Quantity = 1,
                            UnitPrice = 332m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3589), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 11,
                            ProductId = 40,
                            Quantity = 5,
                            UnitPrice = 30m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3590), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 11,
                            ProductId = 13,
                            Quantity = 2,
                            UnitPrice = 389m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3591), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 11,
                            ProductId = 40,
                            Quantity = 4,
                            UnitPrice = 99m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3596), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 12,
                            ProductId = 33,
                            Quantity = 2,
                            UnitPrice = 124m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3597), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 12,
                            ProductId = 27,
                            Quantity = 1,
                            UnitPrice = 52m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3597), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 12,
                            ProductId = 40,
                            Quantity = 4,
                            UnitPrice = 69m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3598), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 12,
                            ProductId = 31,
                            Quantity = 5,
                            UnitPrice = 400m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3599), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 12,
                            ProductId = 30,
                            Quantity = 4,
                            UnitPrice = 51m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3603), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 13,
                            ProductId = 6,
                            Quantity = 5,
                            UnitPrice = 259m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3604), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 13,
                            ProductId = 12,
                            Quantity = 5,
                            UnitPrice = 17m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3605), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 13,
                            ProductId = 25,
                            Quantity = 4,
                            UnitPrice = 123m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3606), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 13,
                            ProductId = 21,
                            Quantity = 1,
                            UnitPrice = 322m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3610), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 14,
                            ProductId = 30,
                            Quantity = 4,
                            UnitPrice = 221m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3611), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 14,
                            ProductId = 20,
                            Quantity = 2,
                            UnitPrice = 239m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3640), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 15,
                            ProductId = 3,
                            Quantity = 1,
                            UnitPrice = 416m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3641), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 15,
                            ProductId = 12,
                            Quantity = 2,
                            UnitPrice = 54m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3642), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 15,
                            ProductId = 30,
                            Quantity = 1,
                            UnitPrice = 145m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3653), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 16,
                            ProductId = 18,
                            Quantity = 1,
                            UnitPrice = 413m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3654), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 16,
                            ProductId = 37,
                            Quantity = 5,
                            UnitPrice = 197m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3655), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 16,
                            ProductId = 36,
                            Quantity = 5,
                            UnitPrice = 130m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3656), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 16,
                            ProductId = 31,
                            Quantity = 2,
                            UnitPrice = 204m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3662), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 17,
                            ProductId = 22,
                            Quantity = 4,
                            UnitPrice = 381m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3663), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 17,
                            ProductId = 26,
                            Quantity = 3,
                            UnitPrice = 244m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3664), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 17,
                            ProductId = 18,
                            Quantity = 2,
                            UnitPrice = 416m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3665), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 17,
                            ProductId = 12,
                            Quantity = 5,
                            UnitPrice = 239m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3669), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 18,
                            ProductId = 12,
                            Quantity = 5,
                            UnitPrice = 157m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3670), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 18,
                            ProductId = 1,
                            Quantity = 3,
                            UnitPrice = 371m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3671), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 18,
                            ProductId = 17,
                            Quantity = 4,
                            UnitPrice = 229m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3675), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 19,
                            ProductId = 11,
                            Quantity = 3,
                            UnitPrice = 53m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3676), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 19,
                            ProductId = 26,
                            Quantity = 4,
                            UnitPrice = 229m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3683), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 20,
                            ProductId = 10,
                            Quantity = 3,
                            UnitPrice = 227m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3684), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 20,
                            ProductId = 18,
                            Quantity = 2,
                            UnitPrice = 337m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3686), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 20,
                            ProductId = 7,
                            Quantity = 2,
                            UnitPrice = 17m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 59, 59, DateTimeKind.Unspecified).AddTicks(3687), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsActive = true,
                            IsDeleted = false,
                            OrderId = 20,
                            ProductId = 40,
                            Quantity = 1,
                            UnitPrice = 89m,
                            UpdatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(842), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(845), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/laptop.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Dizüstü Bilgisayar",
                            Price = 1500.00m,
                            Properties = "16GB RAM, 512GB SSD, Intel i7 İşlemci",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(845), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(847), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(848), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/smartphone.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Akıllı Telefon",
                            Price = 800.00m,
                            Properties = "128GB Depolama, 6GB RAM, 5G Desteği",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(848), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(849), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(851), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/tablet.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Tablet",
                            Price = 600.00m,
                            Properties = "10.5 inç Ekran, 256GB Depolama, Kalem Desteği",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(850), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(852), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(853), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/smartwatch.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Akıllı Saat",
                            Price = 250.00m,
                            Properties = "GPS, Kalp Atışı Ölçer, Suya Dayanıklı",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(853), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(854), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(856), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/earbuds.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Kablosuz Kulaklık",
                            Price = 150.00m,
                            Properties = "Gürültü Önleyici, 20 Saat Pil Ömrü",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(855), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(856), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(858), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/men-jacket.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Erkek Ceket",
                            Price = 120.00m,
                            Properties = "Slim Fit, Kumaş Ceket",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(857), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(859), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(860), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/women-dress.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Kadın Elbise",
                            Price = 80.00m,
                            Properties = "Yazlık Desenli, Pamuklu",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(860), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(861), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(862), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/sneakers.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Spor Ayakkabı",
                            Price = 90.00m,
                            Properties = "Hafif, Nefes Alabilir Taban",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(862), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(863), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(864), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/bag.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Çanta",
                            Price = 70.00m,
                            Properties = "Deri, Günlük Kullanım",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(864), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(865), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(866), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/sunglasses.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Güneş Gözlüğü",
                            Price = 50.00m,
                            Properties = "UV Koruma, Polarize Cam",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(866), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(867), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(868), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/dinner-set.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Yemek Takımı",
                            Price = 100.00m,
                            Properties = "12 Parça, Porselen",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(868), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(870), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(871), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/sofa.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Kanepe",
                            Price = 500.00m,
                            Properties = "3 Kişilik, Kumaş Kaplama",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(871), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(872), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(873), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/bed-sheet.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Yatak Örtüsü",
                            Price = 60.00m,
                            Properties = "Pamuklu, 200x220 cm",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(873), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(874), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(875), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/lamp.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Masa Lambası",
                            Price = 40.00m,
                            Properties = "LED, Ayarlanabilir Işık",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(875), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(876), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(878), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/vacuum.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Süpürge",
                            Price = 120.00m,
                            Properties = "Elektrikli, HEPA Filtre",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(877), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(878), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(880), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/gym-bag.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Spor Çantası",
                            Price = 45.00m,
                            Properties = "30 Litre, Çok Bölmeli",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(879), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(880), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(882), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/tent.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Tent",
                            Price = 200.00m,
                            Properties = "4 Kişilik, Su Geçirmez",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(881), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(882), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(884), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/bike.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Bisiklet",
                            Price = 350.00m,
                            Properties = "21 Vites, Dağ Bisikleti",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(883), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(885), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(886), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/treadmill.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Koşu Bandı",
                            Price = 600.00m,
                            Properties = "Katlanabilir, 12 Program",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(886), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(887), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(888), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/gloves.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Spor Eldiveni",
                            Price = 25.00m,
                            Properties = "Antrenman için, Ergonomik",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(888), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(889), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(890), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/novel.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Roman Kitabı",
                            Price = 20.00m,
                            Properties = "En Çok Satanlar Listesinden",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(890), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(891), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(892), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/self-help.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Kişisel Gelişim Kitabı",
                            Price = 25.00m,
                            Properties = "Motivasyon ve Başarı İçin",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(892), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(893), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(894), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/sci-fi.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Bilim Kurgu Kitabı",
                            Price = 30.00m,
                            Properties = "Klasik Bilim Kurgu Eseri",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(894), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(895), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(898), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/magazine.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Dergi",
                            Price = 10.00m,
                            Properties = "Aylık Teknoloji Dergisi",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(897), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(899), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(900), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/kids-book.png",
                            IsActive = false,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Çocuk Kitabı",
                            Price = 15.00m,
                            Properties = "Resimli, Eğitici Hikayeler",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(899), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(901), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(902), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/lego.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Lego Seti",
                            Price = 80.00m,
                            Properties = "1000 Parça, Yaratıcı Set",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(902), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(903), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(904), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/model-plane.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Model Uçak",
                            Price = 50.00m,
                            Properties = "1:100 Ölçekli, Detaylı",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(904), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(905), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(906), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/puzzle.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Puzzle",
                            Price = 30.00m,
                            Properties = "1000 Parça, Manzara Temalı",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(906), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(908), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(910), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/coloring-book.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Boyama Kitabı",
                            Price = 20.00m,
                            Properties = "Yetişkinler İçin Mandala",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(909), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(911), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(912), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/rc-car.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "RC Araba",
                            Price = 70.00m,
                            Properties = "Uzaktan Kumandalı, Hızlı",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(911), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(913), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(914), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/moisturizer.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Nemlendirici Krem",
                            Price = 40.00m,
                            Properties = "Cilt Bariyerini Güçlendirir",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(914), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(915), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(916), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/lipstick.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Ruj",
                            Price = 25.00m,
                            Properties = "Uzun Süre Kalıcı, 12 Renk Seçeneği",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(916), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(917), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(918), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/perfume.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Parfüm",
                            Price = 60.00m,
                            Properties = "100 ml, Günlük Kullanım",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(918), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(919), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(920), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/shampoo.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Şampuan",
                            Price = 15.00m,
                            Properties = "Saç Dökülmesine Karşı Etkili",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(920), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(922), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(923), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/razor.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Tıraş Makinesi",
                            Price = 90.00m,
                            Properties = "Islak & Kuru Kullanım",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(923), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(924), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(925), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/diapers.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Bebek Bezi",
                            Price = 40.00m,
                            Properties = "Hipoalerjenik, 120 Adet",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(925), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(926), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(927), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/stroller.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Bebek Arabası",
                            Price = 200.00m,
                            Properties = "Katlanabilir, Hafif",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(927), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(928), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(930), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/doll.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Oyuncak Bebek",
                            Price = 35.00m,
                            Properties = "Gerçekçi Tasarım, 30 cm",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(929), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(931), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(932), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/kids-bike.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Çocuk Bisikleti",
                            Price = 100.00m,
                            Properties = "12 inç, Yardımcı Tekerlekli",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(931), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(933), new TimeSpan(0, 0, 0, 0, 0)),
                            DeletedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(934), new TimeSpan(0, 0, 0, 0, 0)),
                            ImageUrl = "/images/products/baby-clothes.png",
                            IsActive = true,
                            IsDeleted = false,
                            IsHome = false,
                            Name = "Bebek Giysisi",
                            Price = 20.00m,
                            Properties = "Pamuklu, Rahat",
                            UpdatedAt = new DateTimeOffset(new DateTime(2025, 3, 15, 7, 10, 58, 898, DateTimeKind.Unspecified).AddTicks(933), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 9
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "d4757375-a497-496b-85dc-a510027bd9b1",
                            RoleId = "0517f36e-53b1-4a0d-b6b3-599afdd926cf"
                        },
                        new
                        {
                            UserId = "d2fe392f-4f60-4963-ba3a-ea52b71fb53e",
                            RoleId = "c44cd475-5365-409f-845c-6ea238190b2b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.CartItem", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.OrderItem", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.ProductCategory", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EShop.Entity.Concrete.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EShop.Entity.Concrete.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
