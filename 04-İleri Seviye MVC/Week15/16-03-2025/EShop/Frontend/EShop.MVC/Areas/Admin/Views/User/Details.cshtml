@model UserModel
@{
    ViewData["Title"] = "Üye Detayları";
}

@Html.AntiForgeryToken()

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Üye Detayları</h1>
            </div>
        </div>
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.UserName)</label>
                                    <p class="form-control">@Model.UserName</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.FirstName)</label>
                                    <p class="form-control">@Model.FirstName</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.LastName)</label>
                                    <p class="form-control">@Model.LastName</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.Email)</label>
                                    <p class="form-control">@Model.Email</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.PhoneNumber)</label>
                                    <p class="form-control">@Model.PhoneNumber</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.Address)</label>
                                    <p class="form-control">@Model.Address</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.City)</label>
                                    <p class="form-control">@Model.City</p>
                                </div>
                                <div class="form-group">
                                    <label>@Html.DisplayNameFor(x => x.Roles)</label>
                                    <select id="roles" class="form-control" multiple>
                                        @foreach (var role in Model.Roles)
                                        {
                                                <option value="@role" selected>@role</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section StylesSection {
        <!-- Select2 -->
        <link rel="stylesheet" href="~/admin/plugins/select2/css/select2.min.css">
        <!-- SweetAlert2 -->
        <link rel="stylesheet" href="~/admin/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">
}

@section ScriptsSection {
        <!-- Select2 -->
        <script src="~/admin/plugins/select2/js/select2.full.min.js"></script>
        <!-- SweetAlert2 -->
        <script src="~/admin/plugins/sweetalert2/sweetalert2.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#roles').select2({
                    tags: true,
                    tokenSeparators: [',', ' ']
                });

                $('#roles').on('change', function () {
                    const roles = $(this).val();
                    const token = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '/Admin/User/UpdateRoles',
                        type: 'POST',
                        data: {
                            userId: '@Model.Id',
                            roles: roles
                        },
                        headers: {
                            'RequestVerificationToken': token
                        },
                        success: function (response) {
                            if (response.isSuccessful) {
                                Swal.fire({
                                    title: 'Başarılı!',
                                    text: 'Roller güncellendi.',
                                    icon: 'success',
                                    timer: 1500,
                                    showConfirmButton: false
                                });
                            } else {
                                Swal.fire({
                                    title: "İşlem Başarısız Oldu!",
                                    text: response.error || "Roller güncellenirken bir sorun oluştu!",
                                    icon: "error",
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: "İşlem Başarısız Oldu!",
                                text: "Roller güncellenirken bir sorun oluştu!",
                                icon: "error",
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                    });
                });
            });
        </script>
}